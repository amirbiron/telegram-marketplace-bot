# כללים ל‑Cursor ⚡️⚡️

## כללי כתיבה

- תחשוב ותענה תמיד בעברית
- כתוב תמיד בשפה פשוטה ומובנת לכל, לא במילים גבוהות
- שמור על טון עניו; הסבר כאילו אתה מסביר לחבר טוב
- כשיש כמה אפשרויות – הצג קודם את הפתרון הפשוט והאמין ביותר

---

## הימנעות ממחיקות קבצים בטסטים ובסקריפטים

### 1) עבדו רק על תיקיות זמניות
- השתמשו ב‑tmp לכל קלט/פלט בטסטים (pytest: `tmp_path`)
- אל תכתבו/תמחקו ב‑root של הפרויקט או בתיקיות קוד מקור

### 2) קבעו ENV/קונפיג למסלולי tmp בלבד
- ודאו ש‑ENV כמו `OUTPUT_DIR` / `WORKDIR` מוגדרים לתיקיות tmp
- בדקו שהם לא ריקים לפני שימוש (assert; לא ברירת מחדל ל‑".")

### 3) אל תשתמשו בגלובים גורפים
- הימנעו מ‑`rm -rf */*` או תבניות כמו `build*`
- העדיפו allowlist לתת‑תיקיה אחת ספציפית בלבד

### 4) סורגי בטיחות לפני מחיקה
- אל תמחקו אם הנתיב לא מתחת ל‑allowlist
- אל תמחקו נתיבים מסוכנים: `/`, `.`, ספריית הפרויקט

### 5) הימנעו משינוי `cwd`
- אם חייבים, שמרו/שחזרו `cwd`, והשתמשו בנתיבים מוחלטים למחיקה

### 6) נטרלו ניקוי מסוכן ב‑CI
- הימנעו מ‑`git clean/reset` על ה‑workspace
- אם חייבים, עבדו על clone זמני בלבד

### 7) במקביליות – הפרידו תיקיות עבודה
- לכל טסט UUID ייחודי (למשל: `/tmp/app-test-<uuid>`)
- לחלופין, הריצו סריאלית טסטים שנוגעים לקבצים

### 8) בדקו תקלות מוקדם
- הרחיקו הרשאות כתיבה מ‑`src` בתקופת הטסטים (`chmod -w`)
- כרכו מחיקות ב‑wrapper בטוח שמרים חריגה מוקדם

### 9) דוגמת Python למחיקה בטוחה

python
from pathlib import Path
import shutil

def safe_rmtree(path: Path, allow_under: Path) -> None:
    p = path.resolve()
    base = allow_under.resolve()
    if not str(p).startswith(str(base)) or p in (Path('/'), base.parent, Path.cwd()):
        raise RuntimeError(f"Refusing to delete unsafe path: {p}")
    shutil.rmtree(p)

### 10) בדיקת קוד לאיתור מחיקות לא בטוחות

bash
rg -n "(shutil.rmtree|os.remove|Path.unlink|rm -rf|rimraf)" -S

### 11) שחזור לאחר מחיקה בטעות
- אל תבצעו merge/PR שעלול לדרוס היסטוריה
- בצעו `git restore`/`git checkout` לקבצים או `git revert` לקומיטים
- אם אין היסטוריה מקומית: שחזרו מ‑CI artifacts / ענף גיבוי / מכונה אחרת
`
